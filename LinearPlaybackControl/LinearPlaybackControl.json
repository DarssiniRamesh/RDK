{
    "$schema": "https://raw.githubusercontent.com/rdkcentral/rdkservices/main/Tools/json_generator/schemas/interface.schema.json",
    "jsonrpc": "2.0",
    "info": {
        "title": "Linear Playback Control API",
        "class": "LinearPlaybackControl",
        "description": "Linear Playback Control JSON-RPC interface"
    },
    "common": {
        "errors": {
            "general": {
                "code": 1,
                "message": "ERROR_GENERAL"
            },
            "unavailable": {
                "code": 2,
                "message": "ERROR_UNAVAILABLE"
            },
            "asyncfailed": {
                "code": 3,
                "message": "ERROR_ASYNC_FAILED"
            },
            "asyncaborted": {
                "code": 4,
                "message": "ERROR_ASYNC_ABORTED"
            },
            "illegalstate": {
                "code": 5,
                "message": "ERROR_ILLEGAL_STATE"
            },
            "openingfailed": {
                "code": 6,
                "message": "ERROR_OPENING_FAILED"
            },
            "acceptfailed": {
                "code": 7,
                "message": "ERROR_ACCEPT_FAILED"
            },
            "pendingshutdown": {
                "code": 8,
                "message": "ERROR_PENDING_SHUTDOWN"
            },
            "alreadyconnected": {
                "code": 9,
                "message": "ERROR_ALREADY_CONNECTED"
            },
            "connectionclosed": {
                "code": 10,
                "message": "ERROR_CONNECTION_CLOSED"
            },
            "timedout": {
                "code": 11,
                "message": "ERROR_TIMEDOUT"
            },
            "inprogress": {
                "code": 12,
                "message": "ERROR_INPROGRESS",
                "description": "Operation in progress"
            },
            "couldnotsetaddress": {
                "code": 13,
                "message": "ERROR_COULD_NOT_SET_ADDRESS"
            },
            "incorrecthash": {
                "code": 14,
                "message": "ERROR_INCORRECT_HASH",
                "description": "Incorrect hash given"
            },
            "incorrecturl": {
                "code": 15,
                "message": "ERROR_INCORRECT_URL",
                "description": "Incorrect URL given"
            },
            "invalidinputlength": {
                "code": 16,
                "message": "ERROR_INVALID_INPUT_LENGTH"
            },
            "destructionsucceeded": {
                "code": 17,
                "message": "ERROR_DESTRUCTION_SUCCEEDED"
            },
            "destructionfailed": {
                "code": 18,
                "message": "ERROR_DESTRUCTION_FAILED"
            },
            "closingfailed": {
                "code": 19,
                "message": "ERROR_CLOSING_FAILED"
            },
            "processterminated": {
                "code": 20,
                "message": "ERROR_PROCESS_TERMINATED"
            },
            "processkilled": {
                "code": 21,
                "message": "ERROR_PROCESS_KILLED"
            },
            "unknownkey": {
                "code": 22,
                "message": "ERROR_UNKNOWN_KEY"
            },
            "incompleteconfig": {
                "code": 23,
                "message": "ERROR_INCOMPLETE_CONFIG"
            },
            "privilegedrequest": {
                "code": 24,
                "message": "ERROR_PRIVILEGED_REQUEST"
            },
            "rpccallfailed": {
                "code": 25,
                "message": "ERROR_RPC_CALL_FAILED"
            },
            "unreachablenetwork": {
                "code": 26,
                "message": "ERROR_UNREACHABLE_NETWORK"
            },
            "requestsubmitted": {
                "code": 27,
                "message": "ERROR_REQUEST_SUBMITTED"
            },
            "unknowntable": {
                "code": 28,
                "message": "ERROR_UNKNOWN_TABLE"
            },
            "duplicatekey": {
                "code": 29,
                "message": "ERROR_DUPLICATE_KEY"
            },
            "badrequest": {
                "code": 30,
                "message": "ERROR_BAD_REQUEST"
            },
            "pendingconditions": {
                "code": 31,
                "message": "ERROR_PENDING_CONDITIONS"
            },
            "surfaceunavailable": {
                "code": 32,
                "message": "ERROR_SURFACE_UNAVAILABLE"
            },
            "playerunavailable": {
                "code": 33,
                "message": "ERROR_PLAYER_UNAVAILABLE"
            },
            "firstresourcenotfound": {
                "code": 34,
                "message": "ERROR_FIRST_RESOURCE_NOT_FOUND"
            },
            "secondsourcenotfound": {
                "code": 35,
                "message": "ERROR_SECOND_RESOURCE_NOT_FOUND"
            },
            "alreadyreleased": {
                "code": 36,
                "message": "ERROR_ALREADY_RELEASED"
            },
            "negtiveacknowledge": {
                "code": 37,
                "message": "ERROR_NEGATIVE_ACKNOWLEDGE"
            },
            "invalidsignature": {
                "code": 38,
                "message": "ERROR_INVALID_SIGNATURE"
            },
            "readerror": {
                "code": 39,
                "message": "ERROR_READ_ERROR"
            },
            "writeerror": {
                "code": 40,
                "message": "ERROR_WRITE_ERROR"
            },
            "invaliddesignator": {
                "code": 41,
                "message": "ERROR_INVALID_DESIGNATOR"
            },
            "unauthenticated": {
                "code": 42,
                "message": "ERROR_UNAUTHENTICATED"
            },
            "notexist": {
                "code": 43,
                "message": "ERROR_NOT_EXIST"
            },
            "notsupported": {
                "code": 44,
                "message": "ERROR_NOT_SUPPORTED"
            }
        },
        "results": {
            "void": {
                "type": "null",
                "default": null,
                "description": "Always null"
            }
        }
    },
    "definitions": {
        "channel":{
            "type": "object",
            "properties": {
                "channel": {
                    "description": "Channel address.",
                    "type": "string",
                    "example": "chan_select"
                }
            },
            "required": [
                "channel"
            ]
        },
        "seek":{
            "type": "object",
            "properties": {
                "seekPosInSeconds": {
                    "description": "TSB seek position offset from live in seconds. The value must be an unsigned integer. If the value exceeds the current TSB size, the seek position will be reduced accordingly.",
                    "type": "number",
                    "size": 64,
                    "example": 0
                }
            },
            "required": [
                "seekPosInSeconds"
            ]
        },
        "trickplay":{
            "type": "object",
            "properties": {
                "speed": {
                    "description": "Trick play speed. The direction is defined by the sign of speed, where a negative value means rewind and positive value means fast forward.",
                    "type": "number",
                    "size": 16,
                    "signed": true,
                    "example": -4
                }
            },
            "required": [
                "speed"
            ]
        },
        "status":{
            "type": "object",
            "properties": {
                "maxSizeInBytes": {
                    "description": "Maximum TSB size in bytes.",
                    "type": "number",
                    "size": 64,
                    "example": 0
                },
                "currentSizeInBytes": {
                    "description": "Current TSB size in bytes.",
                    "type": "number",
                    "size": 64,
                    "example": 0
                },
                "currentSizeInSeconds": {
                    "description": "Current TSB size in seconds.",
                    "type": "number",
                    "size": 64,
                    "example": 0
                },
                "seekPosInBytes": {
                    "description": "Current TSB seek position offset from live in bytes. The value is an unsigned integer and cannot exceed the current TSB size in bytes.",
                    "type": "number",
                    "size": 64,
                    "example": 0
                },
                "seekPosInSeconds": {
                    "description": "Current TSB seek position offset from live in seconds. The value is an unsigned integer and cannot exceed the current TSB size in seconds.",
                    "type": "number",
                    "size": 64,
                    "example": 0
                },
                "trickPlaySpeed": {
                    "description": "Current trick play speed and direction. The direction is defined by the sign of speed, where a negative value means rewind and positive value means fast forward.",
                    "type": "number",
                    "size": 16,
                    "signed": true,
                    "example": -4
                },
                "streamSourceLost": {
                    "description": "Boolean indicating if the buffer source is lost (true) as a result of e.g. network connectivity issues or not (false).",
                    "type": "boolean",
                    "example": false
                },
                "streamSourceLossCount": {
                    "description": "Number of times the streaming is lost and the TSB stopped receiving data from the stream source, during a valid channel selected.",
                    "type": "number",
                    "size": 64,
                    "example": 0
                }
            },
            "required": [
                "maxSizeInBytes",
                "currentSizeInBytes",
                "currentSizeInSeconds",
                "seekPosInBytes",
                "seekPosInSeconds",
                "trickPlaySpeed",
                "streamSourceLost",
                "streamSourceLossCount"
            ]
        },
        "tracing":{
            "type": "object",
            "properties": {
                "tracing": {
                    "description": "Tracing enable (true) / disable (false).",
                    "type": "boolean",
                    "example": true
                }
            }
        }
    },
    "properties": {
        "channel": {
            "summary": "Current channel",
            "readonly": false,
            "params": {
                "$ref": "#/definitions/channel"
            },
            "index": {
                "name": "muxId",
                "example": "0"
            },
            "errors": [
                {
                    "description": "Bad JSON param data format.",
                    "$ref": "#/common/errors/badrequest"
                },
                {
                    "description": "Error reading file or parsing one or more values.",
                    "$ref": "#/common/errors/readerror"
                },
                {
                    "description": "Error writing to file.",
                    "$ref": "#/common/errors/writeerror"
                }
            ]
        },
        "seek": {
            "summary": "TSB seek position offset, from live position, in seconds.",
            "readonly": false,
            "params": {
                "$ref": "#/definitions/seek"
            },
            "index": {
                "name": "muxId",
                "example": "0"
            },
            "errors": [
                {
                    "description": "Bad JSON param data format.",
                    "$ref": "#/common/errors/badrequest"
                },
                {
                    "description": "Error reading file or parsing one or more values.",
                    "$ref": "#/common/errors/readerror"
                },
                {
                    "description": "Error writing to file.",
                    "$ref": "#/common/errors/writeerror"
                }
            ]
        },
        "trickPlay": {
            "summary": "Trick play speed and direction.",
            "readonly": false,
            "params": {
                "$ref": "#/definitions/trickplay"
            },
            "index": {
                "name": "muxId",
                "example": "0"
            },
            "errors": [
                {
                    "description": "Bad JSON param data format.",
                    "$ref": "#/common/errors/badrequest"
                },
                {
                    "description": "Error reading file or parsing one or more values.",
                    "$ref": "#/common/errors/readerror"
                },
                {
                    "description": "Error writing to file.",
                    "$ref": "#/common/errors/writeerror"
                }
            ]
        },
        "status": {
            "summary": "Current TSB status information containing buffer size, seek position and health status.",
            "readonly": true,
            "params": {
                "$ref": "#/definitions/status"
            },
            "index": {
                "name": "muxId",
                "example": "0"
            },
            "errors": [
                {
                    "description": "Error reading file or parsing one or more values.",
                    "$ref": "#/common/errors/readerror"
                }
            ]
        },
        "tracing": {
            "summary": "Tracing enable/disable flag.",
            "readonly": false,
            "params": {
                "$ref": "#/definitions/tracing"
            },
            "errors": [
                {
                    "description": "General failure.",
                    "$ref": "#/common/errors/general"
                },
                {
                    "description": "Bad JSON param data format.",
                    "$ref": "#/common/errors/badrequest"
                }
            ]
        }
    },
    "events": {
        "speedchanged": {
            "summary": "Indicates that the trick play speed has changed",
            "params": {
                "type": "object",
                "properties": {
                    "speed": {
                        "description": "New trick play speed. The direction is defined by the sign of speed, where a negative value means rewind and positive value means fast forward.",
                        "type": "number",
                        "size": 16,
                        "signed": true,
                        "example": -4
                    },
                    "muxId": {
                        "description": "Stream muxId",
                        "type": "number",
                        "size": 8,
                        "example": 0
                    }
                },
                "required": [
                    "speed",
                    "muxId"
                ]
            }
        }
    }
}